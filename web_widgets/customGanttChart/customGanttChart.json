{
  "designerVersion" : "1.4.34",
  "id" : "customGanttChart",
  "name" : "GanttChart",
  "lastUpdate" : 1544023594473,
  "template" : "<!-- The custom widget template is defined here\n   - You can use standard HTML tags and AngularJS built-in directives, scope and interpolation system\n   - Custom widget properties defined on the right can be used as variables in a templates with properties.newProperty\n   - Functions exposed in the controller can be used with ctrl.newFunction()\n   - You can use the 'environment' property injected in the scope when inside the Editor whiteboard. It allows to define a mockup\n     of the Custom Widget to be displayed in the whiteboard only. By default the widget is represented by an auto-generated icon\n     and its name (See the <span> below).\n-->\n \n<span ng-if=\"environment\"><identicon name=\"{{environment.component.id}}\" size=\"30\" background-color=\"[255,255,255, 0]\" foreground-color=\"[51,51,51]\"></identicon> {{environment.component.name}}</span>\n\n\t<style>\n\t\tbody {\n\t\t\tfont-family: sans-serif;\n\t\t}\n\t\t.container {\n\t\t\twidth: 80%;\n\t\t\tmargin: 1 auto;\n\t\t}\n\t\t.gantt-container {\n\t\t\toverflow: scroll;\n\t\t}\n\t\t/* custom class */\n\t\t.gantt .bar-milestone .bar-progress {\n\t\t\tfill: tomato;\n\t\t}\n\t</style>\n\t\n\t<div class=\"gantt-container\">\n\t\t<svg id=\"gantt\" width=\"400\" height=\"100\"></svg>\n\t</div>\n",
  "controller" : "/**\n * The controller is a JavaScript function that augments the AngularJS scope and exposes functions that can be used in the custom widget template\n * \n * Custom widget properties defined on the right can be used as variables in a controller with $scope.properties\n * To use AngularJS standard services, you must declare them in the main function arguments.\n * \n * You can leave the controller empty if you do not need it.\n */\nfunction ctrl($scope) {\n        var tasks = $scope.properties.Value;\n        var flag = false;\n        $scope.$watch('properties.Mode', updateValue);\n        $scope.$watch('properties.Value', updateValue, true);\n        \n\t\tfunction updateValue(){\n\t\t    \n\t\t    if($scope.properties.Value.length === 0 && flag){\n\t\t        location.reload(true);\n\t\t    }\n\t\t    \n\t\t    var gantt_chart = Gantt(\"#gantt\", tasks, {\n\t\t        \n\t\t\ton_click: function (task) {\n\t\t\t\tconsole.log(\"click \"+task);\n\t\t\t\t//console.log(\"item is \"+ JSON.stringify(task));\n\t\t\t},\n\t\t\t\n\t\t\ton_date_change: function(task, start, end) {\n\t\t\t\t$scope.$apply(function(){\n\t\t\t\t    $scope.properties.Value[task._index].start = start.format('YYYY-MM-DD');\n\t\t\t\t    $scope.properties.Value[task._index].end = end.format('YYYY-MM-DD');\n\t\t\t\t});\n\t\t\n\t\t\t},\n\t\t\ton_progress_change: function(task, progress) {\n\t\t\t\t$scope.$apply(function(){\n\t\t\t\t    $scope.properties.Value[task._index].progress = progress;\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\ton_view_change: function(mode) {\n\t\t\t\t//console.log(\"Mode is \"+$scope.properties.Mode);\n\t\t\t}\n\t\t\t\n\t\t    });\n\t\t    \n\t\t    gantt_chart.change_view_mode($scope.properties.Mode);\n\t\t    flag = true;\n\t\t    \n\t\t}\n}",
  "custom" : true,
  "properties" : [ {
    "label" : "Mode",
    "name" : "Mode",
    "type" : "text",
    "bond" : "expression"
  }, {
    "label" : "Value",
    "name" : "Value",
    "type" : "collection",
    "bond" : "expression"
  } ],
  "assets" : [ {
    "id" : "3e9c01f2-780e-4d21-a085-13934f3480f9",
    "name" : "frappe-gantt.min.js",
    "type" : "js",
    "order" : 3,
    "external" : false
  }, {
    "id" : "dc7d5760-8b6b-4258-b47d-b0e880ef7318",
    "name" : "moment-with-locales.min.js",
    "type" : "js",
    "order" : 1,
    "external" : false
  }, {
    "id" : "8c463a4a-8d93-4275-ac17-18bdad51fe02",
    "name" : "snap.svg-min.js",
    "type" : "js",
    "order" : 2,
    "external" : false
  } ],
  "requiredModules" : [ ],
  "type" : "widget",
  "hasHelp" : false
}